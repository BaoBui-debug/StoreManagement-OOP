@page
@model Presentation.Pages.product.EditModel
@using Entity

<input type="hidden" id="IpWarning" value="@Model.Imports.Where(i => !i.Alive).Count()" />

<h4 class="text-danger">@Model.Feedback</h4>
<h4 class="text-center">Cập nhật thông tin sản phẩm</h4>
<div class="d-flex justify-content-center">
    <form method="post" class="row g-3 w-50">
        <div class="col-md-3">
            <label for="id" class="form-label">Mã</label>
            <input class="form-control" name="id" id="defId" value="@Model.DefId" onchange="IsValueModified(this.value)">
            <span class="invalid-feedback"></span>
        </div>
        <div class="col-md-6">
            <label for="name" class="form-label">Tên</label>
            <input type="text" class="form-control" name="name" value="@Model.DefName">
            <span class="invalid-feedback"></span>
        </div>
        <div class="col-md-3">
            <label for="price" class="form-label">Giá</label>
            <input class="form-control" name="price" value="@Model.DefPrice">
            <span class="invalid-feedback"></span>
        </div>

        <div class="col-md-2">
            <label for="quantity" class="form-label">Số lượng</label>
            <input type="number" class="form-control" name="quantity" value="@Model.DefQuantity">
            <span class="invalid-feedback"></span>

        </div>
        <div class="col-md-5">
            <label for="category" class="form-label">loại sản phẩm</label>
            <select class="form-select" name="category">
                <span class="invalid-feedback"></span>
                <option selected value="@Model.DefCategory">@Model.DefCategory</option>
                @{
                    foreach(Category c in Model.Categories)
                    {
                                    <option value="@c.Name">@c.Name</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-5">
            <label for="company" class="form-label">Công ty sản xuất</label>
            <input class="form-control" name="company" value="@Model.DefCompany" />
            <span class="invalid-feedback"></span>
        </div>

        <div class="col-md-6">
            <label for="mfg" class="form-label">Ngày sản xuất</label>
            <input type="date" class="form-control" name="mfg" value="@Model.DefMfg.ToString("yyyy-MM-dd")" />
            <span class="invalid-feedback"></span>
        </div>
        <div class="col-md-6">
            <input checked type="checkbox" id="checkbox" onclick="ExpToggle()">
            <label for="exp" class="form-label">Ngày hết hạng</label>
            <input type="date" class="form-control" name="exp" id="exp" value="@Model.DefExp.ToString("yyyy-MM-dd")" />
            <span class="invalid-feedback"></span>
        </div>
        <a class="col-6 btn btn-secondary" href="/view?i=pr">Hủy</a>
        <button type="submit" id="submitBtn" class="col-6 btn btn-primary">Cập nhật</button>
        <partial name="~/Views/Modals/_Confirmation.cshtml" model="@Model.Note" />
    </form>
</div>
<partial name="~/Views/Modals/_Confirmation.cshtml" model="@Model.Note"/>

<script type="text/javascript">
    var checkbox = document.querySelector("input[id=checkbox]")
    var exp = document.querySelector("input[id=exp]");
    if (exp.value == "0001-01-01") {
        exp.readOnly = true;
        exp.value = null;
        exp.type = "text";
        exp.placeholder = "Không có hạng sử dụng";
        checkbox.checked = false;
    }
    else {
        exp.readOnly = false;
        exp.type = "date";
        exp.required = true;
        checkbox.checked = true;
    }
    var defId = document.querySelector("input[id=defId]").value;
    function IsValueModified(newValue) {
        if (newValue != defId) {
            SetupModal();
        }
        else {
            Reset();
        }
    }
    function SetupModal() {
        var button = document.getElementById("submitBtn");
        button.setAttribute("type", "button");
        button.setAttribute("data-bs-toggle", "modal");
        button.setAttribute("data-bs-target", "#staticBackdrop");
    }
    function Reset() {
        var button = document.getElementById("submitBtn");
        button.setAttribute("type", "submit");
        button.removeAttribute("data-bs-toggle");
        button.removeAttribute("data-bs-target");
    }
</script>